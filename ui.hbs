<style>
  @import url("https://fonts.googleapis.com/css2?family=Oxygen:wght@300;400;700&display=swap");

  body {
    font-family: "Oxygen", sans-serif;
    padding: 16px 16px 0;
  }

  input {
    accent-color: #161616;
  }

  h2 {
    font-size: 16;
    color: #171717;
  }

  .fields-container {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .wrapper {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .wrapper label {
    font-size: 12;
    color: #6f6f6f;
  }

  .wrapper select {
    font-size: 12;
    font-family: "Oxygen", sans-serif;
    width: 120;
    height: 32;
    border-width: 1;
    padding: 4px;
    border-radius: 4px;
  }

  .wrapper select:active,
  .wrapper select:focus {
    border-color: #e03177;
    outline-color: #e03177;
  }

  .radio-group-wrapper {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 8px 0 8px 8px;

    width: 120;
  }

  .radio-option-wrapper {
    display: flex;
    align-items: center;
  }

  .radio-option-wrapper label {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin: 0;
    padding: 0;
    color: #171717;
    cursor: pointer;
  }

  .buttons-wrapper {
    display: flex;
    justify-content: space-between;
  }

  .button-primary {
    background-color: #232323;
    color: white;
    font-family: "Oxygen", sans-serif;
    border: 1px solid #232323;
    padding: 8px 16px;
    border-radius: 4px;
  }
  .button-primary:hover {
    background-color: #e03177;
    border-color: #e03177;
    cursor: pointer;
  }

  .button-secondary {
    background-color: white;
    color: #232323;
    font-family: "Oxygen", sans-serif;
    border: 1px solid #232323;
    padding: 8px 16px;
    border-radius: 4px;
  }
  .button-secondary:hover {
    color: #e03177;
    border-color: #e03177;
    cursor: pointer;
  }
</style>

<form id="plugin-form">
  <h2>Radix UI Palette Generator</h2>

  <div class="fields-container">
    <div class="wrapper">
      <label for="color-name">Select a color:</label>
      <select name="colorName" id="color-name">
        {{#each colors}}
        <option value="{{value}}">{{name}}</option>
        {{/each}}
      </select>
    </div>

    <div class="wrapper">
      <label>Select a color type:</label>
      <div class="radio-group-wrapper">
        <div class="radio-option-wrapper">
          <label for="solid">
            <input type="radio" name="colorType" id="solid" checked />
            Solid
          </label>
        </div>
        <div class="radio-option-wrapper">
          <label for="alpha">
            <input type="radio" name="colorType" id="alpha" />
            Alpha
          </label>
        </div>
      </div>
    </div>

    <input type="hidden" name="colorType" value="solid" />

    <div class="wrapper">
      <label>Select a theme:</label>
      <div class="radio-group-wrapper">
        <div class="radio-option-wrapper">
          <label for="light">
            <input type="radio" name="theme" id="light" checked />
            Light
          </label>
        </div>
        <div class="radio-option-wrapper">
          <label for="dark">
            <input type="radio" name="theme" id="dark" />
            Dark
          </label>
        </div>
      </div>
    </div>

    <input type="hidden" name="themeColor" value="light" />
  </div>

  <div class="buttons-wrapper">
    <button class="button-secondary" id="cancel">Cancel</button>
    <button class="button-primary" id="generate">Generate Palette</button>
  </div>
</form>

<script>
  document.getElementById("generate").onclick = (event) => {
    let pluginForm = document.querySelector("#plugin-form");
    let pluginFormData = new FormData(pluginForm);

    if (document.querySelector("#dark").checked) {
      pluginFormData.set("themeColor", "dark");
    }

    if (document.querySelector("#alpha").checked) {
      pluginFormData.set("colorType", "alpha");
    }

    let formDataObject = {};

    for (let [key, value] of pluginFormData) {
      formDataObject[key] = value;
    }

    parent.postMessage(
      {
        pluginMessage: {
          type: "action-generate",
          formDataObject,
        },
      },
      "*"
    );
  };

  document.getElementById("cancel").onclick = (event) => {
    parent.postMessage(
      {
        pluginMessage: {
          type: "action-exit",
        },
      },
      "*"
    );
  };
</script>
